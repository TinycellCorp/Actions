name: Build apk (slotslive)

on:
  workflow_call:
    inputs:
      app-name:
        type: string
        required: false
        default: "SlotsLive"
      notify-channel-id:
        type: string
        required: false
      upload-channel-id:
        type: string
        required: true
      rlone-config-name:
        type: string
        required: true
      skip-upload-asset-bundles:
        type: boolean
        required: false
        default: false

env:
  SLACK_CHANNEL_ID: ${{ inputs.notify-channel-id || vars.SLACK_BUILD_CHANNEL_ID }}

jobs:
  build:
    runs-on:
      - self-hosted
      - macOS
    outputs:
      ts: ${{ steps.slack.outputs.ts }}
    steps:
      - name: Export slack title
        run: echo "SLACK_TITLE=${{ github.repository }} deploy apk" >> "$GITHUB_ENV"

      - uses: TinycellCorp/Actions/.github/actions/slack/status-message/started@main
        id: slack
        with:
          bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          channel-id: ${{ env.SLACK_CHANNEL_ID }}
          title: ${{ env.SLACK_TITLE }}
          color: "#999"
          message: "Started"

      - uses: actions/checkout@v4
        with:
          submodules: "true"
      - uses: TinycellCorp/Actions/.github/actions/cache@main
        with:
          platform: Android
      - uses: TinycellCorp/Actions/.github/actions/slack/status-message/updated@main
        with:
          bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          channel-id: ${{ env.SLACK_CHANNEL_ID }}
          title: ${{ env.SLACK_TITLE }}
          color: "#ffa500"
          message: "Running unity"
          ts: ${{ steps.slack.outputs.ts }}
      - uses: siren403/unity-builder@custom
        id: unity
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          gitPrivateToken: ${{ github.token }}
          targetPlatform: Android
          androidKeystoreName: user.keystore
          androidKeystoreBase64: ${{ secrets.KEYSTORE_BASE64_TINYCELL_SLOTSLIVE }}
          androidKeystorePass: ${{ secrets.KEYSTORE_PASS_TINYCELL_SLOTSLIVE }}
          androidKeyaliasName: ${{ secrets.KEYSTORE_ALIAS_TINYCELL_SLOTSLIVE }}
          androidKeyaliasPass: ${{ secrets.KEYSTORE_ALIAS_PASS_TINYCELL_SLOTSLIVE }}
          skipActivation: true
      - name: Export artifact name
        run: echo "ARTIFACT_NAME=${{ inputs.app-name }}-${{ steps.unity.outputs.buildVersion }}" >> "$GITHUB_ENV"

      - uses: TinycellCorp/Actions/.github/actions/slack/status-message/updated@main
        if: ${{ inputs.skip-upload-asset-bundles }} == 'false'
        with:
          bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          channel-id: ${{ env.SLACK_CHANNEL_ID }}
          title: ${{ env.SLACK_TITLE }}
          color: "#ffa500"
          message: "Uploading asset bundles"
          ts: ${{ steps.slack.outputs.ts }}

      - name: Upload asset bundles
        if: ${{ inputs.skip-upload-asset-bundles }} == 'false'
        run: "rclone copyto ./ServerData ${{ inputs.rlone-config-name }}:ServerData -P"

      - uses: TinycellCorp/Actions/.github/actions/slack/status-message/updated@main
        with:
          bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          channel-id: ${{ env.SLACK_CHANNEL_ID }}
          title: ${{ env.SLACK_TITLE }}
          color: "#ffa500"
          message: "Uploading artifact"
          ts: ${{ steps.slack.outputs.ts }}

      - name: Rename apk
        run: mv build/Android/Android.apk "build/Android/$ARTIFACT_NAME.apk"
      - name: Apk upload to slack
        uses: MeilCli/slack-upload-file@v4
        with:
          slack_token: ${{ secrets.SLACK_BOT_TOKEN }}
          channel_id: ${{ inputs.upload-channel-id }}
          file_path: build/Android/${{ env.ARTIFACT_NAME }}.apk
          file_type: "apk"
          initial_comment: "${{ env.ARTIFACT_NAME }} Build"

      - name: Update success
        if: success()
        uses: TinycellCorp/Actions/.github/actions/slack/status-message/updated@main
        with:
          bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          channel-id: ${{ env.SLACK_CHANNEL_ID }}
          title: ${{ env.SLACK_TITLE }}
          color: "#00ff00"
          message: "Success"
          ts: ${{ steps.slack.outputs.ts }}
      - name: Update failure
        if: failure()
        uses: TinycellCorp/Actions/.github/actions/slack/status-message/updated@main
        with:
          bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          channel-id: ${{ env.SLACK_CHANNEL_ID }}
          title: ${{ env.SLACK_TITLE }}
          color: "#ff0000"
          message: "Failure - <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|Go to runs>"
          ts: ${{ steps.slack.outputs.ts }}
      - name: Update cancelled
        if: cancelled()
        uses: TinycellCorp/Actions/.github/actions/slack/status-message/updated@main
        with:
          bot-token: ${{ secrets.SLACK_BOT_TOKEN }}
          channel-id: ${{ env.SLACK_CHANNEL_ID }}
          title: ${{ env.SLACK_TITLE }}
          color: "#ff0000"
          message: "Cancelled - <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|Go to runs>"
          ts: ${{ steps.slack.outputs.ts }}
